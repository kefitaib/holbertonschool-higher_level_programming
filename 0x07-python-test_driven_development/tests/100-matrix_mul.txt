The ``100-matrix_mul.py`` module
======================

import the function:

       >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

valide case:

       >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
       [[7, 10], [15, 22]]

       >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
       [[13, 16]]

       >>> matrix_mul([[-1, 2.98]], [[3.6, 4], [5, -6]])
       [[11.3, -21.88]]

       >>> matrix_mul([[1, 2], [3, 4]], [[True, 2], [3, 4]])
       [[7, 10], [15, 22]]


invalid type:

       >>> matrix_mul([[1, 2]], "Hi")
       Traceback (most recent call last):
       ...
       TypeError: m_b must be a list


       >>> matrix_mul("Hi", [[1, 2]])
       Traceback (most recent call last):
       ...
       TypeError: m_a must be a list


type list of lists:

       >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], "Hi"])
       Traceback (most recent call last):
       ...
       TypeError: m_b must be a list of lists


       >>> matrix_mul([[1, 2], "Hi"], [[1, 2], [3, 4]])
       Traceback (most recent call last):
       ...
       TypeError: m_a must be a list of lists

test empty:

       >>> matrix_mul([[1, 2], []], [[1, 2], [3, 4]])
       Traceback (most recent call last):
       ...
       ValueError: m_a can't be empty

       >>> matrix_mul([[1, 2], [3, 4]], [[]])
       Traceback (most recent call last):
       ...
       ValueError: m_b can't be empty

contain types:

       >>> matrix_mul([[1, 2], [3, "hi"]], [[1, 2], [3, 4]])
       Traceback (most recent call last):
       ...
       TypeError: m_a should contain only integers or floats

       >>> matrix_mul([[1, 2], [3, 4]], [['T', 2], [3, 4]])
       Traceback (most recent call last):
       ...
       TypeError: m_b should contain only integers or floats

test size:

       >>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
       Traceback (most recent call last):
       ...
       TypeError: each row of m_a must be of the same size

       >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [4]])
       Traceback (most recent call last):
       ...
       TypeError: each row of m_b must be of the same size

test mul:

       >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
       Traceback (most recent call last):
       ...
       ValueError: m_a and m_b can't be multiplied


test order:

       >>> matrix_mul([[1, 2], []], [[1, 2], [3]])
       Traceback (most recent call last):
       ...
       ValueError: m_a can't be empty
